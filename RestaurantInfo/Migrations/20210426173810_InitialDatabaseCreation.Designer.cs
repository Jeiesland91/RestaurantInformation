// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantInfo.Models;

namespace RestaurantInfo.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20210426173810_InitialDatabaseCreation")]
    partial class InitialDatabaseCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestaurantInfo.Models.Chef", b =>
                {
                    b.Property<int>("ChefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ChefId");

                    b.ToTable("Chefs");

                    b.HasData(
                        new
                        {
                            ChefId = 1,
                            FirstName = "John",
                            LastName = "Montgomery"
                        },
                        new
                        {
                            ChefId = 2,
                            FirstName = "Hannah",
                            LastName = "Smith"
                        },
                        new
                        {
                            ChefId = 3,
                            FirstName = "Jackson",
                            LastName = "Brown"
                        },
                        new
                        {
                            ChefId = 4,
                            FirstName = "Wilson",
                            LastName = "Thomas"
                        },
                        new
                        {
                            ChefId = 5,
                            FirstName = "Kelly",
                            LastName = "Hughes"
                        });
                });

            modelBuilder.Entity("RestaurantInfo.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChefId")
                        .HasColumnType("int");

                    b.Property<string>("Cuisine")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("RestaurantId");

                    b.HasIndex("ChefId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantId = 1,
                            ChefId = 1,
                            Cuisine = "Steakhouse",
                            Name = "Mastro's"
                        },
                        new
                        {
                            RestaurantId = 2,
                            ChefId = 1,
                            Cuisine = "Healthy",
                            Name = "True Food Kitchen"
                        },
                        new
                        {
                            RestaurantId = 3,
                            ChefId = 4,
                            Cuisine = "Seafood",
                            Name = "Oceans Grill"
                        },
                        new
                        {
                            RestaurantId = 4,
                            ChefId = 4,
                            Cuisine = "Mexican",
                            Name = "SOL Mexican Grill"
                        },
                        new
                        {
                            RestaurantId = 5,
                            ChefId = 2,
                            Cuisine = "Mexican",
                            Name = "Habanero's"
                        },
                        new
                        {
                            RestaurantId = 6,
                            ChefId = 2,
                            Cuisine = "Sushi",
                            Name = "Sushi Roku"
                        },
                        new
                        {
                            RestaurantId = 7,
                            ChefId = 5,
                            Cuisine = "Sushi",
                            Name = "Sakana Sushi & Grill"
                        },
                        new
                        {
                            RestaurantId = 8,
                            ChefId = 5,
                            Cuisine = "Japanese",
                            Name = "Roka Akor"
                        },
                        new
                        {
                            RestaurantId = 9,
                            ChefId = 3,
                            Cuisine = "American",
                            Name = "White Chocolate Grill"
                        },
                        new
                        {
                            RestaurantId = 10,
                            ChefId = 3,
                            Cuisine = "American",
                            Name = "Tommy Bahamas Grill"
                        });
                });

            modelBuilder.Entity("RestaurantInfo.Models.Restaurant", b =>
                {
                    b.HasOne("RestaurantInfo.Models.Chef", "Chef")
                        .WithMany("Restaurants")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
